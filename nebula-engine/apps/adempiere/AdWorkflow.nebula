@Remarks("Workflow or combination of tasks")
@Refby("13")
type AdWorkflow {
	@Remarks("Workflow or combination of tasks")
	!AdWorkflowId ID;
	@Remarks("Client/Tenant for this installation.")
	AdClient;
	@Remarks("Organizational entity within client")
	AdOrg;
	@Remarks("Alphanumeric identifier of the entity")
	*Name;
	@Remarks("Optional short description of the record")
	?Description;
	@Remarks("Comment or Hint")
	?Help;
	@Remarks("Access Level required")
	AccessLevel Attr;
	@Remarks("Workflow Node (activity), step or process")
	?AdWfNode;
	@Remarks("Dictionary Entity Type; Determines ownership and synchronization")
	EntityType AdEntityType;/* 'D'  */
	@Remarks("Unit of Duration")
	?DurationUnit null;
	@Remarks("Author/Creator of the Entity")
	Author null;/* 'ComPiere' */
	@Remarks("Version of the table definition")
	Version Number;/* 0 */
	@Remarks("Valid from including this date (first day)")
	?ValidFrom Date;
	@Remarks("Valid to including this date (last day)")
	?ValidTo Date;
	@Remarks("Indicates if this request is of a high, medium or low priority.")
	?Priority;
	@Remarks("Maximum Duration in Duration Unit")
	?Limit Count;
	@Remarks("Normal Duration in Duration Unit")
	Duration Number;/* 0 */
	@Remarks("Cost information")
	Cost;/* 0 */
	@Remarks("Workflow Simulation Execution Time")
	WorkingTime Count;/* 0 */
	@Remarks("Workflow Simulation Waiting time")
	WaitingTime Count;/* 0 */
	@Remarks("Responsible for Workflow Execution")
	?AdWfResponsible;
	@Remarks("Status of Publication")
	PublishStatus Attr;/* NULL */
	@Remarks("Workflow Processor Server")
	?AdWorkflowProcessor;
	@Remarks("Search key for the record in the format required - must be unique")
	Value String;
	@Remarks("Default value")
	IsDefault YesNo;/* 'N'  */
	@Remarks("Database Table information")
	?AdTable;
	@Remarks("Validate Workflow")
	?ValidateWorkflow null;
	@Remarks("Type of Worflow")
	WorkflowType Attr;/* 'G'  */
	@Remarks("Logic to determine Workflow Start - If true, a workflow process is started for the document")
	?DocValueLogic Note;
	@Remarks("Element is valid")
	IsValid YesNo;/* 'N'  */
};

