Classfile /D:/Projects/nebula/nebula-vm/Interpreter2.class
  Last modified 2012-1-31; size 8737 bytes
  MD5 checksum 93716621152cc7d39055fe460dbb7a0d
  Compiled from "Interpreter2.java"
public class Interpreter2
  SourceFile: "Interpreter2.java"
  InnerClasses:
       public static #365= #363 of #125; //Instruction=class BytecodeDefinition$Instruction of class BytecodeDefinition
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Class              #2            //  Interpreter2
    #2 = Utf8               Interpreter2
    #3 = Class              #4            //  java/lang/Object
    #4 = Utf8               java/lang/Object
    #5 = Utf8               DEFAULT_OPERAND_STACK_SIZE
    #6 = Utf8               I
    #7 = Utf8               ConstantValue
    #8 = Integer            100
    #9 = Utf8               DEFAULT_CALL_STACK_SIZE
   #10 = Integer            1000
   #11 = Utf8               disasm
   #12 = Utf8               LDisAssembler;
   #13 = Utf8               ip
   #14 = Utf8               code
   #15 = Utf8               [B
   #16 = Utf8               codeSize
   #17 = Utf8               globals
   #18 = Utf8               [I
   #19 = Utf8               constPool
   #20 = Utf8               [Ljava/lang/Object;
   #21 = Utf8               calls
   #22 = Utf8               [LStackFrame2;
   #23 = Utf8               fp
   #24 = Utf8               mainFunction
   #25 = Utf8               LFunctionSymbol;
   #26 = Utf8               trace
   #27 = Utf8               Z
   #28 = Utf8               structPool
   #29 = Utf8               [[I
   #30 = Utf8               structPoolSize
   #31 = Utf8               <init>
   #32 = Utf8               ()V
   #33 = Utf8               Code
   #34 = Methodref          #3.#35        //  java/lang/Object."<init>":()V
   #35 = NameAndType        #31:#32       //  "<init>":()V
   #36 = Class              #37           //  StackFrame2
   #37 = Utf8               StackFrame2
   #38 = Fieldref           #1.#39        //  Interpreter2.calls:[LStackFrame2;
   #39 = NameAndType        #21:#22       //  calls:[LStackFrame2;
   #40 = Fieldref           #1.#41        //  Interpreter2.fp:I
   #41 = NameAndType        #23:#6        //  fp:I
   #42 = Fieldref           #1.#43        //  Interpreter2.trace:Z
   #43 = NameAndType        #26:#27       //  trace:Z
   #44 = Class              #18           //  "[I"
   #45 = Fieldref           #1.#46        //  Interpreter2.structPool:[[I
   #46 = NameAndType        #28:#29       //  structPool:[[I
   #47 = Fieldref           #1.#48        //  Interpreter2.structPoolSize:I
   #48 = NameAndType        #30:#6        //  structPoolSize:I
   #49 = Utf8               LineNumberTable
   #50 = Utf8               LocalVariableTable
   #51 = Utf8               this
   #52 = Utf8               LInterpreter2;
   #53 = Utf8               main
   #54 = Utf8               ([Ljava/lang/String;)V
   #55 = Utf8               Exceptions
   #56 = Class              #57           //  java/lang/Exception
   #57 = Utf8               java/lang/Exception
   #58 = String             #59           //  -trace
   #59 = Utf8               -trace
   #60 = Methodref          #61.#63       //  java/lang/String.equals:(Ljava/lang/Object;)Z
   #61 = Class              #62           //  java/lang/String
   #62 = Utf8               java/lang/String
   #63 = NameAndType        #64:#65       //  equals:(Ljava/lang/Object;)Z
   #64 = Utf8               equals
   #65 = Utf8               (Ljava/lang/Object;)Z
   #66 = String             #67           //  -dis
   #67 = Utf8               -dis
   #68 = String             #69           //  -dump
   #69 = Utf8               -dump
   #70 = Class              #71           //  java/io/FileInputStream
   #71 = Utf8               java/io/FileInputStream
   #72 = Methodref          #70.#73       //  java/io/FileInputStream."<init>":(Ljava/lang/String;)V
   #73 = NameAndType        #31:#74       //  "<init>":(Ljava/lang/String;)V
   #74 = Utf8               (Ljava/lang/String;)V
   #75 = Fieldref           #76.#78       //  java/lang/System.in:Ljava/io/InputStream;
   #76 = Class              #77           //  java/lang/System
   #77 = Utf8               java/lang/System
   #78 = NameAndType        #79:#80       //  in:Ljava/io/InputStream;
   #79 = Utf8               in
   #80 = Utf8               Ljava/io/InputStream;
   #81 = Methodref          #1.#35        //  Interpreter2."<init>":()V
   #82 = Methodref          #1.#83        //  Interpreter2.load:(LInterpreter2;Ljava/io/InputStream;)Z
   #83 = NameAndType        #84:#85       //  load:(LInterpreter2;Ljava/io/InputStream;)Z
   #84 = Utf8               load
   #85 = Utf8               (LInterpreter2;Ljava/io/InputStream;)Z
   #86 = Methodref          #1.#87        //  Interpreter2.exec:()V
   #87 = NameAndType        #88:#32       //  exec:()V
   #88 = Utf8               exec
   #89 = Methodref          #1.#90        //  Interpreter2.disassemble:()V
   #90 = NameAndType        #91:#32       //  disassemble:()V
   #91 = Utf8               disassemble
   #92 = Methodref          #1.#93        //  Interpreter2.coredump:()V
   #93 = NameAndType        #94:#32       //  coredump:()V
   #94 = Utf8               coredump
   #95 = Utf8               args
   #96 = Utf8               [Ljava/lang/String;
   #97 = Utf8               dump
   #98 = Utf8               filename
   #99 = Utf8               Ljava/lang/String;
  #100 = Utf8               i
  #101 = Utf8               input
  #102 = Utf8               interpreter
  #103 = Utf8               StackMapTable
  #104 = Class              #96           //  "[Ljava/lang/String;"
  #105 = Class              #106          //  java/io/InputStream
  #106 = Utf8               java/io/InputStream
  #107 = Class              #108          //  AssemblerLexer
  #108 = Utf8               AssemblerLexer
  #109 = Class              #110          //  org/antlr/runtime/ANTLRInputStream
  #110 = Utf8               org/antlr/runtime/ANTLRInputStream
  #111 = Methodref          #109.#112     //  org/antlr/runtime/ANTLRInputStream."<init>":(Ljava/io/InputStream;)V
  #112 = NameAndType        #31:#113      //  "<init>":(Ljava/io/InputStream;)V
  #113 = Utf8               (Ljava/io/InputStream;)V
  #114 = Methodref          #107.#115     //  AssemblerLexer."<init>":(Lorg/antlr/runtime/CharStream;)V
  #115 = NameAndType        #31:#116      //  "<init>":(Lorg/antlr/runtime/CharStream;)V
  #116 = Utf8               (Lorg/antlr/runtime/CharStream;)V
  #117 = Class              #118          //  org/antlr/runtime/CommonTokenStream
  #118 = Utf8               org/antlr/runtime/CommonTokenStream
  #119 = Methodref          #117.#120     //  org/antlr/runtime/CommonTokenStream."<init>":(Lorg/antlr/runtime/TokenSource;)V
  #120 = NameAndType        #31:#121      //  "<init>":(Lorg/antlr/runtime/TokenSource;)V
  #121 = Utf8               (Lorg/antlr/runtime/TokenSource;)V
  #122 = Class              #123          //  BytecodeAssembler2
  #123 = Utf8               BytecodeAssembler2
  #124 = Fieldref           #125.#127     //  BytecodeDefinition.instructions:[LBytecodeDefinition$Instruction;
  #125 = Class              #126          //  BytecodeDefinition
  #126 = Utf8               BytecodeDefinition
  #127 = NameAndType        #128:#129     //  instructions:[LBytecodeDefinition$Instruction;
  #128 = Utf8               instructions
  #129 = Utf8               [LBytecodeDefinition$Instruction;
  #130 = Methodref          #122.#131     //  BytecodeAssembler2."<init>":(Lorg/antlr/runtime/TokenStream;[LBytecodeDefinition$Instruction;)V
  #131 = NameAndType        #31:#132      //  "<init>":(Lorg/antlr/runtime/TokenStream;[LBytecodeDefinition$Instruction;)V
  #132 = Utf8               (Lorg/antlr/runtime/TokenStream;[LBytecodeDefinition$Instruction;)V
  #133 = Methodref          #122.#134     //  BytecodeAssembler2.program:()V
  #134 = NameAndType        #135:#32      //  program:()V
  #135 = Utf8               program
  #136 = Methodref          #122.#137     //  BytecodeAssembler2.getMachineCode:()[B
  #137 = NameAndType        #138:#139     //  getMachineCode:()[B
  #138 = Utf8               getMachineCode
  #139 = Utf8               ()[B
  #140 = Fieldref           #1.#141       //  Interpreter2.code:[B
  #141 = NameAndType        #14:#15       //  code:[B
  #142 = Methodref          #122.#143     //  BytecodeAssembler2.getCodeMemorySize:()I
  #143 = NameAndType        #144:#145     //  getCodeMemorySize:()I
  #144 = Utf8               getCodeMemorySize
  #145 = Utf8               ()I
  #146 = Fieldref           #1.#147       //  Interpreter2.codeSize:I
  #147 = NameAndType        #16:#6        //  codeSize:I
  #148 = Methodref          #122.#149     //  BytecodeAssembler2.getConstantPool:()[Ljava/lang/Object;
  #149 = NameAndType        #150:#151     //  getConstantPool:()[Ljava/lang/Object;
  #150 = Utf8               getConstantPool
  #151 = Utf8               ()[Ljava/lang/Object;
  #152 = Fieldref           #1.#153       //  Interpreter2.constPool:[Ljava/lang/Object;
  #153 = NameAndType        #19:#20       //  constPool:[Ljava/lang/Object;
  #154 = Methodref          #122.#155     //  BytecodeAssembler2.getMainFunction:()LFunctionSymbol;
  #155 = NameAndType        #156:#157     //  getMainFunction:()LFunctionSymbol;
  #156 = Utf8               getMainFunction
  #157 = Utf8               ()LFunctionSymbol;
  #158 = Fieldref           #1.#159       //  Interpreter2.mainFunction:LFunctionSymbol;
  #159 = NameAndType        #24:#25       //  mainFunction:LFunctionSymbol;
  #160 = Methodref          #122.#161     //  BytecodeAssembler2.getDataSize:()I
  #161 = NameAndType        #162:#145     //  getDataSize:()I
  #162 = Utf8               getDataSize
  #163 = Fieldref           #1.#164       //  Interpreter2.globals:[I
  #164 = NameAndType        #17:#18       //  globals:[I
  #165 = Class              #166          //  DisAssembler
  #166 = Utf8               DisAssembler
  #167 = Methodref          #165.#168     //  DisAssembler."<init>":([BI[Ljava/lang/Object;)V
  #168 = NameAndType        #31:#169      //  "<init>":([BI[Ljava/lang/Object;)V
  #169 = Utf8               ([BI[Ljava/lang/Object;)V
  #170 = Fieldref           #1.#171       //  Interpreter2.disasm:LDisAssembler;
  #171 = NameAndType        #11:#12       //  disasm:LDisAssembler;
  #172 = Methodref          #122.#173     //  BytecodeAssembler2.getNumberOfSyntaxErrors:()I
  #173 = NameAndType        #174:#145     //  getNumberOfSyntaxErrors:()I
  #174 = Utf8               getNumberOfSyntaxErrors
  #175 = Methodref          #105.#176     //  java/io/InputStream.close:()V
  #176 = NameAndType        #177:#32      //  close:()V
  #177 = Utf8               close
  #178 = Utf8               interp
  #179 = Utf8               hasErrors
  #180 = Utf8               assemblerLexer
  #181 = Utf8               LAssemblerLexer;
  #182 = Utf8               tokens
  #183 = Utf8               Lorg/antlr/runtime/CommonTokenStream;
  #184 = Utf8               assembler
  #185 = Utf8               LBytecodeAssembler2;
  #186 = Class              #187          //  java/lang/Throwable
  #187 = Utf8               java/lang/Throwable
  #188 = Methodref          #76.#189      //  java/lang/System.nanoTime:()J
  #189 = NameAndType        #190:#191     //  nanoTime:()J
  #190 = Utf8               nanoTime
  #191 = Utf8               ()J
  #192 = Class              #193          //  FunctionSymbol
  #193 = Utf8               FunctionSymbol
  #194 = String             #53           //  main
  #195 = Methodref          #192.#196     //  FunctionSymbol."<init>":(Ljava/lang/String;III)V
  #196 = NameAndType        #31:#197      //  "<init>":(Ljava/lang/String;III)V
  #197 = Utf8               (Ljava/lang/String;III)V
  #198 = Fieldref           #1.#199       //  Interpreter2.ip:I
  #199 = NameAndType        #13:#6        //  ip:I
  #200 = Methodref          #36.#201      //  StackFrame2."<init>":(LFunctionSymbol;I)V
  #201 = NameAndType        #31:#202      //  "<init>":(LFunctionSymbol;I)V
  #202 = Utf8               (LFunctionSymbol;I)V
  #203 = Fieldref           #192.#204     //  FunctionSymbol.address:I
  #204 = NameAndType        #205:#6       //  address:I
  #205 = Utf8               address
  #206 = Methodref          #1.#207       //  Interpreter2.cpu:()V
  #207 = NameAndType        #208:#32      //  cpu:()V
  #208 = Utf8               cpu
  #209 = Fieldref           #76.#210      //  java/lang/System.out:Ljava/io/PrintStream;
  #210 = NameAndType        #211:#212     //  out:Ljava/io/PrintStream;
  #211 = Utf8               out
  #212 = Utf8               Ljava/io/PrintStream;
  #213 = Class              #214          //  java/lang/StringBuilder
  #214 = Utf8               java/lang/StringBuilder
  #215 = Methodref          #3.#216       //  java/lang/Object.getClass:()Ljava/lang/Class;
  #216 = NameAndType        #217:#218     //  getClass:()Ljava/lang/Class;
  #217 = Utf8               getClass
  #218 = Utf8               ()Ljava/lang/Class;
  #219 = Methodref          #220.#222     //  java/lang/Class.getName:()Ljava/lang/String;
  #220 = Class              #221          //  java/lang/Class
  #221 = Utf8               java/lang/Class
  #222 = NameAndType        #223:#224     //  getName:()Ljava/lang/String;
  #223 = Utf8               getName
  #224 = Utf8               ()Ljava/lang/String;
  #225 = Methodref          #61.#226      //  java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #226 = NameAndType        #227:#228     //  valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #227 = Utf8               valueOf
  #228 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #229 = Methodref          #213.#73      //  java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #230 = String             #231          //   : 
  #231 = Utf8                : 
  #232 = Methodref          #213.#233     //  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #233 = NameAndType        #234:#235     //  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #234 = Utf8               append
  #235 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #236 = Methodref          #213.#237     //  java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #237 = NameAndType        #234:#238     //  append:(J)Ljava/lang/StringBuilder;
  #238 = Utf8               (J)Ljava/lang/StringBuilder;
  #239 = Methodref          #213.#240     //  java/lang/StringBuilder.toString:()Ljava/lang/String;
  #240 = NameAndType        #241:#224     //  toString:()Ljava/lang/String;
  #241 = Utf8               toString
  #242 = Methodref          #243.#245     //  java/io/PrintStream.println:(Ljava/lang/String;)V
  #243 = Class              #244          //  java/io/PrintStream
  #244 = Utf8               java/io/PrintStream
  #245 = NameAndType        #246:#74      //  println:(Ljava/lang/String;)V
  #246 = Utf8               println
  #247 = Utf8               start
  #248 = Utf8               J
  #249 = Utf8               f
  #250 = Utf8               LStackFrame2;
  #251 = Utf8               end
  #252 = Fieldref           #36.#253      //  StackFrame2.registers:[I
  #253 = NameAndType        #254:#18      //  registers:[I
  #254 = Utf8               registers
  #255 = Methodref          #1.#256       //  Interpreter2.call:(II)V
  #256 = NameAndType        #257:#258     //  call:(II)V
  #257 = Utf8               call
  #258 = Utf8               (II)V
  #259 = Fieldref           #36.#260      //  StackFrame2.returnAddress:I
  #260 = NameAndType        #261:#6       //  returnAddress:I
  #261 = Utf8               returnAddress
  #262 = Class              #263          //  FieldSymbol
  #263 = Utf8               FieldSymbol
  #264 = Fieldref           #262.#265     //  FieldSymbol.offset:I
  #265 = NameAndType        #266:#6       //  offset:I
  #266 = Utf8               offset
  #267 = Methodref          #243.#268     //  java/io/PrintStream.println:(I)V
  #268 = NameAndType        #246:#269     //  println:(I)V
  #269 = Utf8               (I)V
  #270 = Class              #271          //  ClassSymbol
  #271 = Utf8               ClassSymbol
  #272 = Methodref          #270.#273     //  ClassSymbol.getLength:()I
  #273 = NameAndType        #274:#145     //  getLength:()I
  #274 = Utf8               getLength
  #275 = Methodref          #1.#276       //  Interpreter2.newStruct:(I)I
  #276 = NameAndType        #277:#278     //  newStruct:(I)I
  #277 = Utf8               newStruct
  #278 = Utf8               (I)I
  #279 = Class              #280          //  java/lang/Error
  #280 = Utf8               java/lang/Error
  #281 = String             #282          //  invalid opcode: 
  #282 = Utf8               invalid opcode: 
  #283 = Methodref          #213.#284     //  java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #284 = NameAndType        #234:#285     //  append:(I)Ljava/lang/StringBuilder;
  #285 = Utf8               (I)Ljava/lang/StringBuilder;
  #286 = String             #287          //   at ip=
  #287 = Utf8                at ip=
  #288 = Methodref          #279.#73      //  java/lang/Error."<init>":(Ljava/lang/String;)V
  #289 = Utf8               a
  #290 = Utf8               b
  #291 = Utf8               c
  #292 = Utf8               addr
  #293 = Utf8               fieldIndex
  #294 = Utf8               opcode
  #295 = Utf8               S
  #296 = Utf8               r
  #297 = Utf8               funcStringIndex
  #298 = Utf8               baseRegisterIndex
  #299 = Utf8               bv
  #300 = Utf8               bv2
  #301 = Utf8               constIndex
  #302 = Utf8               nfields
  #303 = Utf8               size
  #304 = Fieldref           #192.#305     //  FunctionSymbol.nargs:I
  #305 = NameAndType        #306:#6       //  nargs:I
  #306 = Utf8               nargs
  #307 = Utf8               functionConstPoolIndex
  #308 = Utf8               fs
  #309 = Utf8               callingFrame
  #310 = Methodref          #165.#90      //  DisAssembler.disassemble:()V
  #311 = Methodref          #1.#312       //  Interpreter2.dumpConstantPool:()V
  #312 = NameAndType        #313:#32      //  dumpConstantPool:()V
  #313 = Utf8               dumpConstantPool
  #314 = Methodref          #1.#315       //  Interpreter2.dumpDataMemory:()V
  #315 = NameAndType        #316:#32      //  dumpDataMemory:()V
  #316 = Utf8               dumpDataMemory
  #317 = Methodref          #1.#318       //  Interpreter2.dumpCodeMemory:()V
  #318 = NameAndType        #319:#32      //  dumpCodeMemory:()V
  #319 = Utf8               dumpCodeMemory
  #320 = String             #321          //  Constant pool:
  #321 = Utf8               Constant pool:
  #322 = String             #323          //  %04d: \"%s\"\n
  #323 = Utf8               %04d: \"%s\"\n
  #324 = Methodref          #325.#327     //  java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #325 = Class              #326          //  java/lang/Integer
  #326 = Utf8               java/lang/Integer
  #327 = NameAndType        #227:#328     //  valueOf:(I)Ljava/lang/Integer;
  #328 = Utf8               (I)Ljava/lang/Integer;
  #329 = Methodref          #243.#330     //  java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
  #330 = NameAndType        #331:#332     //  printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
  #331 = Utf8               printf
  #332 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
  #333 = String             #334          //  %04d: %s\n
  #334 = Utf8               %04d: %s\n
  #335 = Methodref          #243.#336     //  java/io/PrintStream.println:()V
  #336 = NameAndType        #246:#32      //  println:()V
  #337 = Utf8               o
  #338 = Utf8               Ljava/lang/Object;
  #339 = Class              #20           //  "[Ljava/lang/Object;"
  #340 = String             #341          //  Data memory:
  #341 = Utf8               Data memory:
  #342 = String             #343          //  %04d: %s <%s>\n
  #343 = Utf8               %04d: %s <%s>\n
  #344 = Methodref          #220.#345     //  java/lang/Class.getSimpleName:()Ljava/lang/String;
  #345 = NameAndType        #346:#224     //  getSimpleName:()Ljava/lang/String;
  #346 = Utf8               getSimpleName
  #347 = String             #348          //  %04d: <null>\n
  #348 = Utf8               %04d: <null>\n
  #349 = String             #350          //  Code memory:
  #350 = Utf8               Code memory:
  #351 = String             #352          //  %04d:
  #352 = Utf8               %04d:
  #353 = String             #354          //   %3d
  #354 = Utf8                %3d
  #355 = Methodref          #356.#358     //  java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
  #356 = Class              #357          //  java/lang/Byte
  #357 = Utf8               java/lang/Byte
  #358 = NameAndType        #227:#359     //  valueOf:(B)Ljava/lang/Byte;
  #359 = Utf8               (B)Ljava/lang/Byte;
  #360 = Utf8               SourceFile
  #361 = Utf8               Interpreter2.java
  #362 = Utf8               InnerClasses
  #363 = Class              #364          //  BytecodeDefinition$Instruction
  #364 = Utf8               BytecodeDefinition$Instruction
  #365 = Utf8               Instruction
{
  public static final int DEFAULT_OPERAND_STACK_SIZE;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 100

  public static final int DEFAULT_CALL_STACK_SIZE;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1000

  DisAssembler disasm;
    flags: 

  int ip;
    flags: 

  byte[] code;
    flags: 

  int codeSize;
    flags: 

  int[] globals;
    flags: 

  protected java.lang.Object[] constPool;
    flags: ACC_PROTECTED

  StackFrame2[] calls;
    flags: 

  int fp;
    flags: 

  FunctionSymbol mainFunction;
    flags: 

  boolean trace;
    flags: 

  int[][] structPool;
    flags: 

  int structPoolSize;
    flags: 

  public Interpreter2();
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #34                 // Method java/lang/Object."<init>":()V
         4: aload_0       
         5: sipush        1000
         8: anewarray     #36                 // class StackFrame2
        11: putfield      #38                 // Field calls:[LStackFrame2;
        14: aload_0       
        15: iconst_m1     
        16: putfield      #40                 // Field fp:I
        19: aload_0       
        20: iconst_0      
        21: putfield      #42                 // Field trace:Z
        24: aload_0       
        25: bipush        100
        27: anewarray     #44                 // class "[I"
        30: putfield      #45                 // Field structPool:[[I
        33: aload_0       
        34: iconst_0      
        35: putfield      #47                 // Field structPoolSize:I
        38: return        
      LineNumberTable:
        line 16: 0
        line 28: 4
        line 29: 14
        line 32: 19
        line 268: 24
        line 269: 33
        line 16: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0      39     0  this   LInterpreter2;

  public static void main(java.lang.String[]) throws java.lang.Exception;
    flags: ACC_PUBLIC, ACC_STATIC
    Exceptions:
      throws java.lang.Exception
    Code:
      stack=3, locals=8, args_size=1
         0: iconst_0      
         1: istore_1      
         2: iconst_0      
         3: istore_2      
         4: iconst_0      
         5: istore_3      
         6: aconst_null   
         7: astore        4
         9: iconst_0      
        10: istore        5
        12: goto          84
        15: aload_0       
        16: iload         5
        18: aaload        
        19: ldc           #58                 // String -trace
        21: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        24: ifeq          35
        27: iconst_1      
        28: istore_1      
        29: iinc          5, 1
        32: goto          84
        35: aload_0       
        36: iload         5
        38: aaload        
        39: ldc           #66                 // String -dis
        41: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        44: ifeq          55
        47: iconst_1      
        48: istore_2      
        49: iinc          5, 1
        52: goto          84
        55: aload_0       
        56: iload         5
        58: aaload        
        59: ldc           #68                 // String -dump
        61: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        64: ifeq          75
        67: iconst_1      
        68: istore_3      
        69: iinc          5, 1
        72: goto          84
        75: aload_0       
        76: iload         5
        78: aaload        
        79: astore        4
        81: iinc          5, 1
        84: iload         5
        86: aload_0       
        87: arraylength   
        88: if_icmplt     15
        91: aconst_null   
        92: astore        6
        94: aload         4
        96: ifnull        113
        99: new           #70                 // class java/io/FileInputStream
       102: dup           
       103: aload         4
       105: invokespecial #72                 // Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
       108: astore        6
       110: goto          118
       113: getstatic     #75                 // Field java/lang/System.in:Ljava/io/InputStream;
       116: astore        6
       118: new           #1                  // class Interpreter2
       121: dup           
       122: invokespecial #81                 // Method "<init>":()V
       125: astore        7
       127: aload         7
       129: aload         6
       131: invokestatic  #82                 // Method load:(LInterpreter2;Ljava/io/InputStream;)Z
       134: pop           
       135: aload         7
       137: iload_1       
       138: putfield      #42                 // Field trace:Z
       141: aload         7
       143: invokevirtual #86                 // Method exec:()V
       146: iload_2       
       147: ifeq          155
       150: aload         7
       152: invokevirtual #89                 // Method disassemble:()V
       155: iload_3       
       156: ifeq          164
       159: aload         7
       161: invokevirtual #92                 // Method coredump:()V
       164: return        
      LineNumberTable:
        line 36: 0
        line 37: 2
        line 38: 4
        line 39: 6
        line 40: 9
        line 41: 12
        line 42: 15
        line 43: 27
        line 44: 29
        line 45: 35
        line 46: 47
        line 47: 49
        line 48: 55
        line 49: 67
        line 50: 69
        line 52: 75
        line 53: 81
        line 41: 84
        line 57: 91
        line 58: 94
        line 59: 113
        line 61: 118
        line 62: 127
        line 63: 135
        line 64: 141
        line 65: 146
        line 66: 155
        line 67: 164
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     165     0  args   [Ljava/lang/String;
               2     163     1 trace   Z
               4     161     2 disassemble   Z
               6     159     3  dump   Z
               9     156     4 filename   Ljava/lang/String;
              12     153     5     i   I
              94      71     6 input   Ljava/io/InputStream;
             127      38     7 interpreter   LInterpreter2;
      StackMapTable: number_of_entries = 9
           frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class "[Ljava/lang/String;", int, int, int, class java/lang/String, int ]
          stack = []
           frame_type = 19 /* same */
           frame_type = 19 /* same */
           frame_type = 19 /* same */
           frame_type = 8 /* same */
           frame_type = 252 /* append */
             offset_delta = 28
        locals = [ class java/io/InputStream ]
           frame_type = 4 /* same */
           frame_type = 252 /* append */
             offset_delta = 36
        locals = [ class Interpreter2 ]
           frame_type = 8 /* same */


  public static boolean load(Interpreter2, java.io.InputStream) throws java.lang.Exception;
    flags: ACC_PUBLIC, ACC_STATIC
    Exceptions:
      throws java.lang.Exception
    Code:
      stack=6, locals=7, args_size=2
         0: iconst_0      
         1: istore_2      
         2: new           #107                // class AssemblerLexer
         5: dup           
         6: new           #109                // class org/antlr/runtime/ANTLRInputStream
         9: dup           
        10: aload_1       
        11: invokespecial #111                // Method org/antlr/runtime/ANTLRInputStream."<init>":(Ljava/io/InputStream;)V
        14: invokespecial #114                // Method AssemblerLexer."<init>":(Lorg/antlr/runtime/CharStream;)V
        17: astore_3      
        18: new           #117                // class org/antlr/runtime/CommonTokenStream
        21: dup           
        22: aload_3       
        23: invokespecial #119                // Method org/antlr/runtime/CommonTokenStream."<init>":(Lorg/antlr/runtime/TokenSource;)V
        26: astore        4
        28: new           #122                // class BytecodeAssembler2
        31: dup           
        32: aload         4
        34: getstatic     #124                // Field BytecodeDefinition.instructions:[LBytecodeDefinition$Instruction;
        37: invokespecial #130                // Method BytecodeAssembler2."<init>":(Lorg/antlr/runtime/TokenStream;[LBytecodeDefinition$Instruction;)V
        40: astore        5
        42: aload         5
        44: invokevirtual #133                // Method BytecodeAssembler2.program:()V
        47: aload_0       
        48: aload         5
        50: invokevirtual #136                // Method BytecodeAssembler2.getMachineCode:()[B
        53: putfield      #140                // Field code:[B
        56: aload_0       
        57: aload         5
        59: invokevirtual #142                // Method BytecodeAssembler2.getCodeMemorySize:()I
        62: putfield      #146                // Field codeSize:I
        65: aload_0       
        66: aload         5
        68: invokevirtual #148                // Method BytecodeAssembler2.getConstantPool:()[Ljava/lang/Object;
        71: putfield      #152                // Field constPool:[Ljava/lang/Object;
        74: aload_0       
        75: aload         5
        77: invokevirtual #154                // Method BytecodeAssembler2.getMainFunction:()LFunctionSymbol;
        80: putfield      #158                // Field mainFunction:LFunctionSymbol;
        83: aload_0       
        84: aload         5
        86: invokevirtual #160                // Method BytecodeAssembler2.getDataSize:()I
        89: newarray       int
        91: putfield      #163                // Field globals:[I
        94: aload_0       
        95: new           #165                // class DisAssembler
        98: dup           
        99: aload_0       
       100: getfield      #140                // Field code:[B
       103: aload_0       
       104: getfield      #146                // Field codeSize:I
       107: aload_0       
       108: getfield      #152                // Field constPool:[Ljava/lang/Object;
       111: invokespecial #167                // Method DisAssembler."<init>":([BI[Ljava/lang/Object;)V
       114: putfield      #170                // Field disasm:LDisAssembler;
       117: aload         5
       119: invokevirtual #172                // Method BytecodeAssembler2.getNumberOfSyntaxErrors:()I
       122: ifle          129
       125: iconst_1      
       126: goto          130
       129: iconst_0      
       130: istore_2      
       131: goto          143
       134: astore        6
       136: aload_1       
       137: invokevirtual #175                // Method java/io/InputStream.close:()V
       140: aload         6
       142: athrow        
       143: aload_1       
       144: invokevirtual #175                // Method java/io/InputStream.close:()V
       147: iload_2       
       148: ireturn       
      Exception table:
         from    to  target type
             2   134   134   any
      LineNumberTable:
        line 70: 0
        line 72: 2
        line 73: 18
        line 74: 28
        line 75: 42
        line 76: 47
        line 77: 56
        line 78: 65
        line 79: 74
        line 80: 83
        line 81: 94
        line 82: 117
        line 83: 134
        line 84: 136
        line 85: 140
        line 84: 143
        line 86: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     149     0 interp   LInterpreter2;
               0     149     1 input   Ljava/io/InputStream;
               2     147     2 hasErrors   Z
              18     116     3 assemblerLexer   LAssemblerLexer;
              28     106     4 tokens   Lorg/antlr/runtime/CommonTokenStream;
              42      92     5 assembler   LBytecodeAssembler2;
      StackMapTable: number_of_entries = 4
           frame_type = 255 /* full_frame */
          offset_delta = 129
          locals = [ class Interpreter2, class java/io/InputStream, int, class AssemblerLexer, class org/antlr/runtime/CommonTokenStream, class BytecodeAssembler2 ]
          stack = []
           frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
           frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class Interpreter2, class java/io/InputStream, int ]
          stack = [ class java/lang/Throwable ]
           frame_type = 8 /* same */


  public void exec() throws java.lang.Exception;
    flags: ACC_PUBLIC
    Exceptions:
      throws java.lang.Exception
    Code:
      stack=7, locals=6, args_size=1
         0: invokestatic  #188                // Method java/lang/System.nanoTime:()J
         3: lstore_1      
         4: aload_0       
         5: getfield      #158                // Field mainFunction:LFunctionSymbol;
         8: ifnonnull     27
        11: aload_0       
        12: new           #192                // class FunctionSymbol
        15: dup           
        16: ldc           #194                // String main
        18: iconst_0      
        19: iconst_0      
        20: iconst_0      
        21: invokespecial #195                // Method FunctionSymbol."<init>":(Ljava/lang/String;III)V
        24: putfield      #158                // Field mainFunction:LFunctionSymbol;
        27: new           #36                 // class StackFrame2
        30: dup           
        31: aload_0       
        32: getfield      #158                // Field mainFunction:LFunctionSymbol;
        35: aload_0       
        36: getfield      #198                // Field ip:I
        39: invokespecial #200                // Method StackFrame2."<init>":(LFunctionSymbol;I)V
        42: astore_3      
        43: aload_0       
        44: getfield      #38                 // Field calls:[LStackFrame2;
        47: aload_0       
        48: dup           
        49: getfield      #40                 // Field fp:I
        52: iconst_1      
        53: iadd          
        54: dup_x1        
        55: putfield      #40                 // Field fp:I
        58: aload_3       
        59: aastore       
        60: aload_0       
        61: aload_0       
        62: getfield      #158                // Field mainFunction:LFunctionSymbol;
        65: getfield      #203                // Field FunctionSymbol.address:I
        68: putfield      #198                // Field ip:I
        71: aload_0       
        72: invokevirtual #206                // Method cpu:()V
        75: invokestatic  #188                // Method java/lang/System.nanoTime:()J
        78: lstore        4
        80: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        83: new           #213                // class java/lang/StringBuilder
        86: dup           
        87: aload_0       
        88: invokevirtual #215                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        91: invokevirtual #219                // Method java/lang/Class.getName:()Ljava/lang/String;
        94: invokestatic  #225                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        97: invokespecial #229                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       100: ldc           #230                // String  : 
       102: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       105: lload         4
       107: lload_1       
       108: lsub          
       109: invokevirtual #236                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
       112: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       115: invokevirtual #242                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       118: return        
      LineNumberTable:
        line 91: 0
        line 94: 4
        line 95: 11
        line 97: 27
        line 98: 43
        line 99: 60
        line 100: 71
        line 102: 75
        line 103: 80
        line 104: 118
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     119     0  this   LInterpreter2;
               4     115     1 start   J
              43      76     3     f   LStackFrame2;
              80      39     4   end   J
      StackMapTable: number_of_entries = 1
           frame_type = 252 /* append */
             offset_delta = 27
        locals = [ long ]


  protected void cpu();
    flags: ACC_PROTECTED
    Code:
      stack=9, locals=15, args_size=1
         0: iconst_0      
         1: istore_1      
         2: iconst_0      
         3: istore_2      
         4: iconst_0      
         5: istore_3      
         6: iconst_0      
         7: istore        4
         9: iconst_0      
        10: istore        5
        12: aload_0       
        13: getfield      #140                // Field code:[B
        16: aload_0       
        17: dup           
        18: getfield      #198                // Field ip:I
        21: dup_x1        
        22: iconst_1      
        23: iadd          
        24: putfield      #198                // Field ip:I
        27: baload        
        28: istore        6
        30: goto          1381
        33: aload_0       
        34: getfield      #38                 // Field calls:[LStackFrame2;
        37: aload_0       
        38: getfield      #40                 // Field fp:I
        41: aaload        
        42: getfield      #252                // Field StackFrame2.registers:[I
        45: astore        7
        47: iload         6
        49: tableswitch   { // 1 to 29
                       1: 180
                       2: 241
                       3: 308
                       4: 375
                       5: 449
                       6: 1322
                       7: 1322
                       8: 1322
                       9: 1322
                      10: 1322
                      11: 1322
                      12: 523
                      13: 570
                      14: 621
                      15: 637
                      16: 692
                      17: 747
                      18: 788
                      19: 1322
                      20: 854
                      21: 898
                      22: 947
                      23: 996
                      24: 1078
                      25: 1160
                      26: 1205
                      27: 1235
                      28: 1294
                      29: 1319
                 default: 1322
            }
       180: aload         7
       182: aload_0       
       183: getfield      #140                // Field code:[B
       186: aload_0       
       187: dup           
       188: getfield      #198                // Field ip:I
       191: dup_x1        
       192: iconst_1      
       193: iadd          
       194: putfield      #198                // Field ip:I
       197: baload        
       198: aload         7
       200: aload_0       
       201: getfield      #140                // Field code:[B
       204: aload_0       
       205: dup           
       206: getfield      #198                // Field ip:I
       209: dup_x1        
       210: iconst_1      
       211: iadd          
       212: putfield      #198                // Field ip:I
       215: baload        
       216: iaload        
       217: aload         7
       219: aload_0       
       220: getfield      #140                // Field code:[B
       223: aload_0       
       224: dup           
       225: getfield      #198                // Field ip:I
       228: dup_x1        
       229: iconst_1      
       230: iadd          
       231: putfield      #198                // Field ip:I
       234: baload        
       235: iaload        
       236: iadd          
       237: iastore       
       238: goto          1363
       241: aload_0       
       242: getfield      #140                // Field code:[B
       245: aload_0       
       246: dup           
       247: getfield      #198                // Field ip:I
       250: dup_x1        
       251: iconst_1      
       252: iadd          
       253: putfield      #198                // Field ip:I
       256: baload        
       257: istore_1      
       258: aload_0       
       259: getfield      #140                // Field code:[B
       262: aload_0       
       263: dup           
       264: getfield      #198                // Field ip:I
       267: dup_x1        
       268: iconst_1      
       269: iadd          
       270: putfield      #198                // Field ip:I
       273: baload        
       274: istore_2      
       275: aload_0       
       276: getfield      #140                // Field code:[B
       279: aload_0       
       280: dup           
       281: getfield      #198                // Field ip:I
       284: dup_x1        
       285: iconst_1      
       286: iadd          
       287: putfield      #198                // Field ip:I
       290: baload        
       291: istore_3      
       292: aload         7
       294: iload_3       
       295: aload         7
       297: iload_1       
       298: iaload        
       299: aload         7
       301: iload_2       
       302: iaload        
       303: isub          
       304: iastore       
       305: goto          1363
       308: aload_0       
       309: getfield      #140                // Field code:[B
       312: aload_0       
       313: dup           
       314: getfield      #198                // Field ip:I
       317: dup_x1        
       318: iconst_1      
       319: iadd          
       320: putfield      #198                // Field ip:I
       323: baload        
       324: istore_1      
       325: aload_0       
       326: getfield      #140                // Field code:[B
       329: aload_0       
       330: dup           
       331: getfield      #198                // Field ip:I
       334: dup_x1        
       335: iconst_1      
       336: iadd          
       337: putfield      #198                // Field ip:I
       340: baload        
       341: istore_2      
       342: aload_0       
       343: getfield      #140                // Field code:[B
       346: aload_0       
       347: dup           
       348: getfield      #198                // Field ip:I
       351: dup_x1        
       352: iconst_1      
       353: iadd          
       354: putfield      #198                // Field ip:I
       357: baload        
       358: istore_3      
       359: aload         7
       361: iload_3       
       362: aload         7
       364: iload_1       
       365: iaload        
       366: aload         7
       368: iload_2       
       369: iaload        
       370: imul          
       371: iastore       
       372: goto          1363
       375: aload_0       
       376: getfield      #140                // Field code:[B
       379: aload_0       
       380: dup           
       381: getfield      #198                // Field ip:I
       384: dup_x1        
       385: iconst_1      
       386: iadd          
       387: putfield      #198                // Field ip:I
       390: baload        
       391: istore_1      
       392: aload_0       
       393: getfield      #140                // Field code:[B
       396: aload_0       
       397: dup           
       398: getfield      #198                // Field ip:I
       401: dup_x1        
       402: iconst_1      
       403: iadd          
       404: putfield      #198                // Field ip:I
       407: baload        
       408: istore_2      
       409: aload_0       
       410: getfield      #140                // Field code:[B
       413: aload_0       
       414: dup           
       415: getfield      #198                // Field ip:I
       418: dup_x1        
       419: iconst_1      
       420: iadd          
       421: putfield      #198                // Field ip:I
       424: baload        
       425: istore_3      
       426: aload         7
       428: iload_3       
       429: aload         7
       431: iload_1       
       432: iaload        
       433: aload         7
       435: iload_2       
       436: iaload        
       437: if_icmpge     444
       440: iconst_0      
       441: goto          445
       444: iconst_m1     
       445: iastore       
       446: goto          1363
       449: aload_0       
       450: getfield      #140                // Field code:[B
       453: aload_0       
       454: dup           
       455: getfield      #198                // Field ip:I
       458: dup_x1        
       459: iconst_1      
       460: iadd          
       461: putfield      #198                // Field ip:I
       464: baload        
       465: istore_1      
       466: aload_0       
       467: getfield      #140                // Field code:[B
       470: aload_0       
       471: dup           
       472: getfield      #198                // Field ip:I
       475: dup_x1        
       476: iconst_1      
       477: iadd          
       478: putfield      #198                // Field ip:I
       481: baload        
       482: istore_2      
       483: aload_0       
       484: getfield      #140                // Field code:[B
       487: aload_0       
       488: dup           
       489: getfield      #198                // Field ip:I
       492: dup_x1        
       493: iconst_1      
       494: iadd          
       495: putfield      #198                // Field ip:I
       498: baload        
       499: istore_3      
       500: aload         7
       502: iload_3       
       503: aload         7
       505: iload_1       
       506: iaload        
       507: aload         7
       509: iload_2       
       510: iaload        
       511: if_icmpne     518
       514: iconst_0      
       515: goto          519
       518: iconst_m1     
       519: iastore       
       520: goto          1363
       523: aload_0       
       524: getfield      #140                // Field code:[B
       527: aload_0       
       528: dup           
       529: getfield      #198                // Field ip:I
       532: dup_x1        
       533: iconst_1      
       534: iadd          
       535: putfield      #198                // Field ip:I
       538: baload        
       539: istore        8
       541: aload_0       
       542: getfield      #140                // Field code:[B
       545: aload_0       
       546: dup           
       547: getfield      #198                // Field ip:I
       550: dup_x1        
       551: iconst_1      
       552: iadd          
       553: putfield      #198                // Field ip:I
       556: baload        
       557: istore        9
       559: aload_0       
       560: iload         8
       562: iload         9
       564: invokevirtual #255                // Method call:(II)V
       567: goto          1363
       570: aload_0       
       571: getfield      #38                 // Field calls:[LStackFrame2;
       574: aload_0       
       575: dup           
       576: getfield      #40                 // Field fp:I
       579: dup_x1        
       580: iconst_1      
       581: isub          
       582: putfield      #40                 // Field fp:I
       585: aaload        
       586: astore        10
       588: aload_0       
       589: getfield      #38                 // Field calls:[LStackFrame2;
       592: aload_0       
       593: getfield      #40                 // Field fp:I
       596: aaload        
       597: getfield      #252                // Field StackFrame2.registers:[I
       600: iconst_0      
       601: aload         10
       603: getfield      #252                // Field StackFrame2.registers:[I
       606: iconst_0      
       607: iaload        
       608: iastore       
       609: aload_0       
       610: aload         10
       612: getfield      #259                // Field StackFrame2.returnAddress:I
       615: putfield      #198                // Field ip:I
       618: goto          1363
       621: aload_0       
       622: aload_0       
       623: getfield      #140                // Field code:[B
       626: aload_0       
       627: getfield      #198                // Field ip:I
       630: baload        
       631: putfield      #198                // Field ip:I
       634: goto          1363
       637: aload_0       
       638: getfield      #140                // Field code:[B
       641: aload_0       
       642: dup           
       643: getfield      #198                // Field ip:I
       646: dup_x1        
       647: iconst_1      
       648: iadd          
       649: putfield      #198                // Field ip:I
       652: baload        
       653: istore_1      
       654: aload_0       
       655: getfield      #140                // Field code:[B
       658: aload_0       
       659: dup           
       660: getfield      #198                // Field ip:I
       663: dup_x1        
       664: iconst_1      
       665: iadd          
       666: putfield      #198                // Field ip:I
       669: baload        
       670: istore        4
       672: aload         7
       674: iload_1       
       675: iaload        
       676: istore        11
       678: iload         11
       680: ifne          1363
       683: aload_0       
       684: iload         4
       686: putfield      #198                // Field ip:I
       689: goto          1363
       692: aload_0       
       693: getfield      #140                // Field code:[B
       696: aload_0       
       697: dup           
       698: getfield      #198                // Field ip:I
       701: dup_x1        
       702: iconst_1      
       703: iadd          
       704: putfield      #198                // Field ip:I
       707: baload        
       708: istore_1      
       709: aload_0       
       710: getfield      #140                // Field code:[B
       713: aload_0       
       714: dup           
       715: getfield      #198                // Field ip:I
       718: dup_x1        
       719: iconst_1      
       720: iadd          
       721: putfield      #198                // Field ip:I
       724: baload        
       725: istore        4
       727: aload         7
       729: iload_1       
       730: iaload        
       731: istore        12
       733: iload         12
       735: ifeq          1363
       738: aload_0       
       739: iload         4
       741: putfield      #198                // Field ip:I
       744: goto          1363
       747: aload_0       
       748: getfield      #140                // Field code:[B
       751: aload_0       
       752: dup           
       753: getfield      #198                // Field ip:I
       756: dup_x1        
       757: iconst_1      
       758: iadd          
       759: putfield      #198                // Field ip:I
       762: baload        
       763: istore_1      
       764: aload         7
       766: iload_1       
       767: aload_0       
       768: getfield      #140                // Field code:[B
       771: aload_0       
       772: dup           
       773: getfield      #198                // Field ip:I
       776: dup_x1        
       777: iconst_1      
       778: iadd          
       779: putfield      #198                // Field ip:I
       782: baload        
       783: i2c           
       784: iastore       
       785: goto          1363
       788: aload         7
       790: aload_0       
       791: getfield      #140                // Field code:[B
       794: aload_0       
       795: dup           
       796: getfield      #198                // Field ip:I
       799: dup_x1        
       800: iconst_1      
       801: iadd          
       802: putfield      #198                // Field ip:I
       805: baload        
       806: aload_0       
       807: getfield      #140                // Field code:[B
       810: aload_0       
       811: dup           
       812: getfield      #198                // Field ip:I
       815: dup_x1        
       816: iconst_1      
       817: iadd          
       818: putfield      #198                // Field ip:I
       821: baload        
       822: sipush        255
       825: iand          
       826: bipush        8
       828: ishl          
       829: aload_0       
       830: getfield      #140                // Field code:[B
       833: aload_0       
       834: dup           
       835: getfield      #198                // Field ip:I
       838: dup_x1        
       839: iconst_1      
       840: iadd          
       841: putfield      #198                // Field ip:I
       844: baload        
       845: sipush        255
       848: iand          
       849: ior           
       850: iastore       
       851: goto          1363
       854: aload_0       
       855: getfield      #140                // Field code:[B
       858: aload_0       
       859: dup           
       860: getfield      #198                // Field ip:I
       863: dup_x1        
       864: iconst_1      
       865: iadd          
       866: putfield      #198                // Field ip:I
       869: baload        
       870: istore_1      
       871: aload_0       
       872: getfield      #140                // Field code:[B
       875: aload_0       
       876: dup           
       877: getfield      #198                // Field ip:I
       880: dup_x1        
       881: iconst_1      
       882: iadd          
       883: putfield      #198                // Field ip:I
       886: baload        
       887: istore        13
       889: aload         7
       891: iload_1       
       892: iload         13
       894: iastore       
       895: goto          1363
       898: aload_0       
       899: getfield      #140                // Field code:[B
       902: aload_0       
       903: dup           
       904: getfield      #198                // Field ip:I
       907: dup_x1        
       908: iconst_1      
       909: iadd          
       910: putfield      #198                // Field ip:I
       913: baload        
       914: istore_1      
       915: aload_0       
       916: getfield      #140                // Field code:[B
       919: aload_0       
       920: dup           
       921: getfield      #198                // Field ip:I
       924: dup_x1        
       925: iconst_1      
       926: iadd          
       927: putfield      #198                // Field ip:I
       930: baload        
       931: istore        4
       933: aload         7
       935: iload_1       
       936: aload_0       
       937: getfield      #163                // Field globals:[I
       940: iload         4
       942: iaload        
       943: iastore       
       944: goto          1363
       947: aload_0       
       948: getfield      #140                // Field code:[B
       951: aload_0       
       952: dup           
       953: getfield      #198                // Field ip:I
       956: dup_x1        
       957: iconst_1      
       958: iadd          
       959: putfield      #198                // Field ip:I
       962: baload        
       963: istore_1      
       964: aload_0       
       965: getfield      #140                // Field code:[B
       968: aload_0       
       969: dup           
       970: getfield      #198                // Field ip:I
       973: dup_x1        
       974: iconst_1      
       975: iadd          
       976: putfield      #198                // Field ip:I
       979: baload        
       980: istore        4
       982: aload_0       
       983: getfield      #163                // Field globals:[I
       986: iload         4
       988: aload         7
       990: iload_1       
       991: iaload        
       992: iastore       
       993: goto          1363
       996: aload_0       
       997: getfield      #140                // Field code:[B
      1000: aload_0       
      1001: dup           
      1002: getfield      #198                // Field ip:I
      1005: dup_x1        
      1006: iconst_1      
      1007: iadd          
      1008: putfield      #198                // Field ip:I
      1011: baload        
      1012: istore_1      
      1013: aload_0       
      1014: getfield      #140                // Field code:[B
      1017: aload_0       
      1018: dup           
      1019: getfield      #198                // Field ip:I
      1022: dup_x1        
      1023: iconst_1      
      1024: iadd          
      1025: putfield      #198                // Field ip:I
      1028: baload        
      1029: istore_2      
      1030: aload_0       
      1031: getfield      #152                // Field constPool:[Ljava/lang/Object;
      1034: aload_0       
      1035: getfield      #140                // Field code:[B
      1038: aload_0       
      1039: dup           
      1040: getfield      #198                // Field ip:I
      1043: dup_x1        
      1044: iconst_1      
      1045: iadd          
      1046: putfield      #198                // Field ip:I
      1049: baload        
      1050: aaload        
      1051: checkcast     #262                // class FieldSymbol
      1054: getfield      #264                // Field FieldSymbol.offset:I
      1057: istore        5
      1059: aload         7
      1061: iload_1       
      1062: aload_0       
      1063: getfield      #45                 // Field structPool:[[I
      1066: aload         7
      1068: iload_2       
      1069: iaload        
      1070: aaload        
      1071: iload         5
      1073: iaload        
      1074: iastore       
      1075: goto          1363
      1078: aload_0       
      1079: getfield      #140                // Field code:[B
      1082: aload_0       
      1083: dup           
      1084: getfield      #198                // Field ip:I
      1087: dup_x1        
      1088: iconst_1      
      1089: iadd          
      1090: putfield      #198                // Field ip:I
      1093: baload        
      1094: istore_1      
      1095: aload_0       
      1096: getfield      #140                // Field code:[B
      1099: aload_0       
      1100: dup           
      1101: getfield      #198                // Field ip:I
      1104: dup_x1        
      1105: iconst_1      
      1106: iadd          
      1107: putfield      #198                // Field ip:I
      1110: baload        
      1111: istore_2      
      1112: aload_0       
      1113: getfield      #152                // Field constPool:[Ljava/lang/Object;
      1116: aload_0       
      1117: getfield      #140                // Field code:[B
      1120: aload_0       
      1121: dup           
      1122: getfield      #198                // Field ip:I
      1125: dup_x1        
      1126: iconst_1      
      1127: iadd          
      1128: putfield      #198                // Field ip:I
      1131: baload        
      1132: aaload        
      1133: checkcast     #262                // class FieldSymbol
      1136: getfield      #264                // Field FieldSymbol.offset:I
      1139: istore        5
      1141: aload_0       
      1142: getfield      #45                 // Field structPool:[[I
      1145: aload         7
      1147: iload_2       
      1148: iaload        
      1149: aaload        
      1150: iload         5
      1152: aload         7
      1154: iload_1       
      1155: iaload        
      1156: iastore       
      1157: goto          1363
      1160: aload_0       
      1161: getfield      #140                // Field code:[B
      1164: aload_0       
      1165: dup           
      1166: getfield      #198                // Field ip:I
      1169: dup_x1        
      1170: iconst_1      
      1171: iadd          
      1172: putfield      #198                // Field ip:I
      1175: baload        
      1176: istore_1      
      1177: aload_0       
      1178: getfield      #140                // Field code:[B
      1181: aload_0       
      1182: dup           
      1183: getfield      #198                // Field ip:I
      1186: dup_x1        
      1187: iconst_1      
      1188: iadd          
      1189: putfield      #198                // Field ip:I
      1192: baload        
      1193: istore_2      
      1194: aload         7
      1196: iload_2       
      1197: aload         7
      1199: iload_1       
      1200: iaload        
      1201: iastore       
      1202: goto          1363
      1205: aload_0       
      1206: getfield      #140                // Field code:[B
      1209: aload_0       
      1210: dup           
      1211: getfield      #198                // Field ip:I
      1214: dup_x1        
      1215: iconst_1      
      1216: iadd          
      1217: putfield      #198                // Field ip:I
      1220: baload        
      1221: istore_1      
      1222: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
      1225: aload         7
      1227: iload_1       
      1228: iaload        
      1229: invokevirtual #267                // Method java/io/PrintStream.println:(I)V
      1232: goto          1363
      1235: aload_0       
      1236: getfield      #140                // Field code:[B
      1239: aload_0       
      1240: dup           
      1241: getfield      #198                // Field ip:I
      1244: dup_x1        
      1245: iconst_1      
      1246: iadd          
      1247: putfield      #198                // Field ip:I
      1250: baload        
      1251: istore_1      
      1252: aload_0       
      1253: getfield      #152                // Field constPool:[Ljava/lang/Object;
      1256: aload_0       
      1257: getfield      #140                // Field code:[B
      1260: aload_0       
      1261: dup           
      1262: getfield      #198                // Field ip:I
      1265: dup_x1        
      1266: iconst_1      
      1267: iadd          
      1268: putfield      #198                // Field ip:I
      1271: baload        
      1272: aaload        
      1273: checkcast     #270                // class ClassSymbol
      1276: invokevirtual #272                // Method ClassSymbol.getLength:()I
      1279: istore        14
      1281: aload         7
      1283: iload_1       
      1284: aload_0       
      1285: iload         14
      1287: invokevirtual #275                // Method newStruct:(I)I
      1290: iastore       
      1291: goto          1363
      1294: aload_0       
      1295: getfield      #140                // Field code:[B
      1298: aload_0       
      1299: dup           
      1300: getfield      #198                // Field ip:I
      1303: dup_x1        
      1304: iconst_1      
      1305: iadd          
      1306: putfield      #198                // Field ip:I
      1309: baload        
      1310: istore_1      
      1311: aload         7
      1313: iload_1       
      1314: iconst_0      
      1315: iastore       
      1316: goto          1363
      1319: goto          1392
      1322: new           #279                // class java/lang/Error
      1325: dup           
      1326: new           #213                // class java/lang/StringBuilder
      1329: dup           
      1330: ldc_w         #281                // String invalid opcode: 
      1333: invokespecial #229                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      1336: iload         6
      1338: invokevirtual #283                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      1341: ldc_w         #286                // String  at ip=
      1344: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      1347: aload_0       
      1348: getfield      #198                // Field ip:I
      1351: iconst_1      
      1352: isub          
      1353: invokevirtual #283                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      1356: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      1359: invokespecial #288                // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      1362: athrow        
      1363: aload_0       
      1364: getfield      #140                // Field code:[B
      1367: aload_0       
      1368: dup           
      1369: getfield      #198                // Field ip:I
      1372: dup_x1        
      1373: iconst_1      
      1374: iadd          
      1375: putfield      #198                // Field ip:I
      1378: baload        
      1379: istore        6
      1381: aload_0       
      1382: getfield      #198                // Field ip:I
      1385: aload_0       
      1386: getfield      #146                // Field codeSize:I
      1389: if_icmplt     33
      1392: return        
      LineNumberTable:
        line 109: 0
        line 110: 12
        line 111: 30
        line 115: 33
        line 117: 47
        line 119: 180
        line 120: 238
        line 123: 241
        line 124: 258
        line 125: 275
        line 126: 292
        line 127: 305
        line 129: 308
        line 130: 325
        line 131: 342
        line 132: 359
        line 133: 372
        line 135: 375
        line 136: 392
        line 137: 409
        line 138: 426
        line 139: 446
        line 141: 449
        line 142: 466
        line 143: 483
        line 144: 500
        line 145: 520
        line 182: 523
        line 183: 541
        line 184: 559
        line 185: 567
        line 187: 570
        line 188: 588
        line 189: 609
        line 190: 618
        line 192: 621
        line 193: 634
        line 195: 637
        line 196: 654
        line 197: 672
        line 198: 678
        line 199: 689
        line 201: 692
        line 202: 709
        line 203: 727
        line 204: 733
        line 205: 744
        line 207: 747
        line 208: 764
        line 209: 785
        line 211: 788
        line 212: 851
        line 215: 854
        line 216: 871
        line 217: 889
        line 218: 895
        line 220: 898
        line 221: 915
        line 222: 933
        line 223: 944
        line 225: 947
        line 226: 964
        line 227: 982
        line 228: 993
        line 230: 996
        line 231: 1013
        line 232: 1030
        line 233: 1059
        line 234: 1075
        line 236: 1078
        line 237: 1095
        line 238: 1112
        line 239: 1141
        line 240: 1157
        line 242: 1160
        line 243: 1177
        line 244: 1194
        line 245: 1202
        line 247: 1205
        line 248: 1222
        line 249: 1232
        line 251: 1235
        line 252: 1252
        line 253: 1281
        line 254: 1291
        line 256: 1294
        line 257: 1311
        line 258: 1316
        line 260: 1319
        line 262: 1322
        line 264: 1363
        line 111: 1381
        line 266: 1392
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0    1393     0  this   LInterpreter2;
               2    1391     1     a   I
               4    1389     2     b   I
               6    1387     3     c   I
               9    1384     4  addr   I
              12    1381     5 fieldIndex   I
              30    1363     6 opcode   S
              47    1334     7     r   [I
             541      29     8 funcStringIndex   I
             559      11     9 baseRegisterIndex   I
             588      33    10     f   LStackFrame2;
             678      14    11    bv   I
             733      14    12   bv2   I
             889       9    13 constIndex   I
            1281      13    14 nfields   I
      StackMapTable: number_of_entries = 33
           frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class Interpreter2, int, int, int, int, int, int ]
          stack = []
           frame_type = 252 /* append */
             offset_delta = 146
        locals = [ class "[I" ]
           frame_type = 60 /* same */
           frame_type = 251 /* same_frame_extended */
          offset_delta = 66
           frame_type = 251 /* same_frame_extended */
          offset_delta = 66
           frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = [ class "[I", int ]
           frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = [ class "[I", int, int ]
           frame_type = 3 /* same */
           frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = [ class "[I", int ]
           frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = [ class "[I", int, int ]
           frame_type = 3 /* same */
           frame_type = 46 /* same */
           frame_type = 50 /* same */
           frame_type = 15 /* same */
           frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I", top, top, top, int ]
          stack = []
           frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = []
           frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I", top, top, top, top, int ]
          stack = []
           frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class Interpreter2, int, int, int, int, int, int, class "[I" ]
          stack = []
           frame_type = 40 /* same */
           frame_type = 251 /* same_frame_extended */
          offset_delta = 65
           frame_type = 43 /* same */
           frame_type = 48 /* same */
           frame_type = 48 /* same */
           frame_type = 251 /* same_frame_extended */
          offset_delta = 81
           frame_type = 251 /* same_frame_extended */
          offset_delta = 81
           frame_type = 44 /* same */
           frame_type = 29 /* same */
           frame_type = 58 /* same */
           frame_type = 24 /* same */
           frame_type = 2 /* same */
           frame_type = 40 /* same */
           frame_type = 250 /* chop */
          offset_delta = 17
           frame_type = 10 /* same */


  protected int newStruct(int);
    flags: ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0       
         1: getfield      #45                 // Field structPool:[[I
         4: aload_0       
         5: getfield      #47                 // Field structPoolSize:I
         8: iload_1       
         9: newarray       int
        11: aastore       
        12: aload_0       
        13: dup           
        14: getfield      #47                 // Field structPoolSize:I
        17: dup_x1        
        18: iconst_1      
        19: iadd          
        20: putfield      #47                 // Field structPoolSize:I
        23: ireturn       
      LineNumberTable:
        line 272: 0
        line 273: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0      24     0  this   LInterpreter2;
               0      24     1  size   I

  protected void call(int, int);
    flags: ACC_PROTECTED
    Code:
      stack=5, locals=7, args_size=3
         0: aload_0       
         1: getfield      #152                // Field constPool:[Ljava/lang/Object;
         4: iload_1       
         5: aaload        
         6: checkcast     #192                // class FunctionSymbol
         9: astore_3      
        10: new           #36                 // class StackFrame2
        13: dup           
        14: aload_3       
        15: aload_0       
        16: getfield      #198                // Field ip:I
        19: invokespecial #200                // Method StackFrame2."<init>":(LFunctionSymbol;I)V
        22: astore        4
        24: aload_0       
        25: getfield      #38                 // Field calls:[LStackFrame2;
        28: aload_0       
        29: getfield      #40                 // Field fp:I
        32: aaload        
        33: astore        5
        35: aload_0       
        36: getfield      #38                 // Field calls:[LStackFrame2;
        39: aload_0       
        40: dup           
        41: getfield      #40                 // Field fp:I
        44: iconst_1      
        45: iadd          
        46: dup_x1        
        47: putfield      #40                 // Field fp:I
        50: aload         4
        52: aastore       
        53: iconst_0      
        54: istore        6
        56: goto          82
        59: aload         4
        61: getfield      #252                // Field StackFrame2.registers:[I
        64: iload         6
        66: iconst_1      
        67: iadd          
        68: aload         5
        70: getfield      #252                // Field StackFrame2.registers:[I
        73: iload_2       
        74: iload         6
        76: iadd          
        77: iaload        
        78: iastore       
        79: iinc          6, 1
        82: iload         6
        84: aload_3       
        85: getfield      #304                // Field FunctionSymbol.nargs:I
        88: if_icmplt     59
        91: aload_0       
        92: aload_3       
        93: getfield      #203                // Field FunctionSymbol.address:I
        96: putfield      #198                // Field ip:I
        99: return        
      LineNumberTable:
        line 277: 0
        line 278: 10
        line 279: 24
        line 280: 35
        line 282: 53
        line 283: 59
        line 282: 79
        line 285: 91
        line 286: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     100     0  this   LInterpreter2;
               0     100     1 functionConstPoolIndex   I
               0     100     2 baseRegisterIndex   I
              10      90     3    fs   LFunctionSymbol;
              24      76     4     f   LStackFrame2;
              35      65     5 callingFrame   LStackFrame2;
              56      35     6     a   I
      StackMapTable: number_of_entries = 2
           frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class Interpreter2, int, int, class FunctionSymbol, class StackFrame2, class StackFrame2, int ]
          stack = []
           frame_type = 22 /* same */


  public void disassemble();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: getfield      #170                // Field disasm:LDisAssembler;
         4: invokevirtual #310                // Method DisAssembler.disassemble:()V
         7: return        
      LineNumberTable:
        line 302: 0
        line 303: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0       8     0  this   LInterpreter2;

  protected void trace();
    flags: ACC_PROTECTED
    Code:
      stack=0, locals=1, args_size=1
         0: return        
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0       1     0  this   LInterpreter2;

  public void coredump();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: getfield      #152                // Field constPool:[Ljava/lang/Object;
         4: arraylength   
         5: ifle          12
         8: aload_0       
         9: invokevirtual #311                // Method dumpConstantPool:()V
        12: aload_0       
        13: getfield      #163                // Field globals:[I
        16: arraylength   
        17: ifle          24
        20: aload_0       
        21: invokevirtual #314                // Method dumpDataMemory:()V
        24: aload_0       
        25: invokevirtual #317                // Method dumpCodeMemory:()V
        28: return        
      LineNumberTable:
        line 332: 0
        line 333: 12
        line 334: 24
        line 335: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0      29     0  this   LInterpreter2;
      StackMapTable: number_of_entries = 2
           frame_type = 12 /* same */
           frame_type = 11 /* same */


  protected void dumpConstantPool();
    flags: ACC_PROTECTED
    Code:
      stack=6, locals=6, args_size=1
         0: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc_w         #320                // String Constant pool:
         6: invokevirtual #242                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         9: iconst_0      
        10: istore_1      
        11: aload_0       
        12: getfield      #152                // Field constPool:[Ljava/lang/Object;
        15: dup           
        16: astore        5
        18: arraylength   
        19: istore        4
        21: iconst_0      
        22: istore_3      
        23: goto          97
        26: aload         5
        28: iload_3       
        29: aaload        
        30: astore_2      
        31: aload_2       
        32: instanceof    #61                 // class java/lang/String
        35: ifeq          66
        38: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        41: ldc_w         #322                // String %04d: \"%s\"\n
        44: iconst_2      
        45: anewarray     #3                  // class java/lang/Object
        48: dup           
        49: iconst_0      
        50: iload_1       
        51: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        54: aastore       
        55: dup           
        56: iconst_1      
        57: aload_2       
        58: aastore       
        59: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        62: pop           
        63: goto          91
        66: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        69: ldc_w         #333                // String %04d: %s\n
        72: iconst_2      
        73: anewarray     #3                  // class java/lang/Object
        76: dup           
        77: iconst_0      
        78: iload_1       
        79: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        82: aastore       
        83: dup           
        84: iconst_1      
        85: aload_2       
        86: aastore       
        87: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        90: pop           
        91: iinc          1, 1
        94: iinc          3, 1
        97: iload_3       
        98: iload         4
       100: if_icmplt     26
       103: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
       106: invokevirtual #335                // Method java/io/PrintStream.println:()V
       109: return        
      LineNumberTable:
        line 338: 0
        line 339: 9
        line 340: 11
        line 341: 31
        line 342: 38
        line 344: 66
        line 346: 91
        line 340: 94
        line 348: 103
        line 349: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     110     0  this   LInterpreter2;
              11      99     1  addr   I
              31      63     2     o   Ljava/lang/Object;
      StackMapTable: number_of_entries = 4
           frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class Interpreter2, int, top, int, int, class "[Ljava/lang/Object;" ]
          stack = []
           frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class Interpreter2, int, class java/lang/Object, int, int, class "[Ljava/lang/Object;" ]
          stack = []
           frame_type = 24 /* same */
           frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class Interpreter2, int, top, int, int, class "[Ljava/lang/Object;" ]
          stack = []


  protected void dumpDataMemory();
    flags: ACC_PROTECTED
    Code:
      stack=6, locals=6, args_size=1
         0: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc_w         #340                // String Data memory:
         6: invokevirtual #242                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         9: iconst_0      
        10: istore_1      
        11: aload_0       
        12: getfield      #163                // Field globals:[I
        15: dup           
        16: astore        5
        18: arraylength   
        19: istore        4
        21: iconst_0      
        22: istore_3      
        23: goto          103
        26: aload         5
        28: iload_3       
        29: iaload        
        30: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        33: astore_2      
        34: aload_2       
        35: ifnull        76
        38: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        41: ldc_w         #342                // String %04d: %s <%s>\n
        44: iconst_3      
        45: anewarray     #3                  // class java/lang/Object
        48: dup           
        49: iconst_0      
        50: iload_1       
        51: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        54: aastore       
        55: dup           
        56: iconst_1      
        57: aload_2       
        58: aastore       
        59: dup           
        60: iconst_2      
        61: aload_2       
        62: invokevirtual #215                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        65: invokevirtual #344                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
        68: aastore       
        69: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        72: pop           
        73: goto          97
        76: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        79: ldc_w         #347                // String %04d: <null>\n
        82: iconst_1      
        83: anewarray     #3                  // class java/lang/Object
        86: dup           
        87: iconst_0      
        88: iload_1       
        89: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        92: aastore       
        93: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        96: pop           
        97: iinc          1, 1
       100: iinc          3, 1
       103: iload_3       
       104: iload         4
       106: if_icmplt     26
       109: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
       112: invokevirtual #335                // Method java/io/PrintStream.println:()V
       115: return        
      LineNumberTable:
        line 352: 0
        line 353: 9
        line 354: 11
        line 355: 34
        line 356: 38
        line 358: 76
        line 360: 97
        line 354: 100
        line 362: 109
        line 363: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     116     0  this   LInterpreter2;
              11     105     1  addr   I
              34      66     2     o   Ljava/lang/Object;
      StackMapTable: number_of_entries = 4
           frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class Interpreter2, int, top, int, int, class "[I" ]
          stack = []
           frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class Interpreter2, int, class java/lang/Object, int, int, class "[I" ]
          stack = []
           frame_type = 20 /* same */
           frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class Interpreter2, int, top, int, int, class "[I" ]
          stack = []


  public void dumpCodeMemory();
    flags: ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=1
         0: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc_w         #349                // String Code memory:
         6: invokevirtual #242                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         9: iconst_0      
        10: istore_1      
        11: goto          88
        14: iload_1       
        15: bipush        8
        17: irem          
        18: ifne          31
        21: iload_1       
        22: ifeq          31
        25: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        28: invokevirtual #335                // Method java/io/PrintStream.println:()V
        31: iload_1       
        32: bipush        8
        34: irem          
        35: ifne          59
        38: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        41: ldc_w         #351                // String %04d:
        44: iconst_1      
        45: anewarray     #3                  // class java/lang/Object
        48: dup           
        49: iconst_0      
        50: iload_1       
        51: invokestatic  #324                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        54: aastore       
        55: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        58: pop           
        59: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
        62: ldc_w         #353                // String  %3d
        65: iconst_1      
        66: anewarray     #3                  // class java/lang/Object
        69: dup           
        70: iconst_0      
        71: aload_0       
        72: getfield      #140                // Field code:[B
        75: iload_1       
        76: baload        
        77: invokestatic  #355                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        80: aastore       
        81: invokevirtual #329                // Method java/io/PrintStream.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
        84: pop           
        85: iinc          1, 1
        88: aload_0       
        89: getfield      #140                // Field code:[B
        92: ifnull        103
        95: iload_1       
        96: aload_0       
        97: getfield      #146                // Field codeSize:I
       100: if_icmplt     14
       103: getstatic     #209                // Field java/lang/System.out:Ljava/io/PrintStream;
       106: invokevirtual #335                // Method java/io/PrintStream.println:()V
       109: return        
      LineNumberTable:
        line 366: 0
        line 367: 9
        line 368: 14
        line 369: 31
        line 370: 59
        line 367: 85
        line 372: 103
        line 373: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0     110     0  this   LInterpreter2;
              11      92     1     i   I
      StackMapTable: number_of_entries = 5
           frame_type = 252 /* append */
             offset_delta = 14
        locals = [ int ]
           frame_type = 16 /* same */
           frame_type = 27 /* same */
           frame_type = 28 /* same */
           frame_type = 250 /* chop */
          offset_delta = 14

}
