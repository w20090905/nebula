package nebula.data.db.dao;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;

public class OrderDAODump implements Opcodes {

	public static byte[] dump() throws Exception {

		ClassWriter cw = new ClassWriter(0);
		FieldVisitor fv;
		MethodVisitor mv;
		AnnotationVisitor av0;

		cw.visit(V1_6, ACC_PUBLIC + ACC_SUPER, "nebula/data/db/dao/OrderDAO", "Ljava/lang/Object;Lnebula/data/db/dao/DAO<Lnebula/data/Order;>;",
				"java/lang/Object", new String[] { "nebula/data/db/dao/DAO" });

		cw.visitSource("OrderDAO.java", null);

		{
			fv = cw.visitField(0, "conn", "Ljava/sql/Connection;", null, null);
			fv.visitEnd();
		}
		{
			mv = cw.visitMethod(ACC_PUBLIC, "<init>", "()V", null, null);
			mv.visitCode();
			Label l0 = new Label();
			mv.visitLabel(l0);
			mv.visitLineNumber(13, l0);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V");
			mv.visitInsn(RETURN);
			Label l1 = new Label();
			mv.visitLabel(l1);
			mv.visitLocalVariable("this", "Lnebula/data/db/dao/OrderDAO;", null, l0, l1, 0);
			mv.visitMaxs(1, 1);
			mv.visitEnd();
		}
		{
			mv = cw.visitMethod(ACC_PUBLIC, "query", "()Ljava/util/List;", "()Ljava/util/List<Lnebula/data/Order;>;", new String[] { "java/sql/SQLException" });
			mv.visitCode();
			Label l0 = new Label();
			mv.visitLabel(l0);
			mv.visitLineNumber(20, l0);
			mv.visitTypeInsn(NEW, "java/util/ArrayList");
			mv.visitInsn(DUP);
			mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V");
			mv.visitVarInsn(ASTORE, 3);
			Label l1 = new Label();
			mv.visitLabel(l1);
			mv.visitLineNumber(22, l1);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitFieldInsn(GETFIELD, "nebula/data/db/dao/OrderDAO", "conn", "Ljava/sql/Connection;");
			mv.visitLdcInsn("select * from NOrder order by id");
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;");
			mv.visitVarInsn(ASTORE, 1);
			Label l2 = new Label();
			mv.visitLabel(l2);
			mv.visitLineNumber(23, l2);
			mv.visitVarInsn(ALOAD, 1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "executeQuery", "()Ljava/sql/ResultSet;");
			mv.visitVarInsn(ASTORE, 2);
			Label l3 = new Label();
			mv.visitLabel(l3);
			mv.visitLineNumber(25, l3);
			Label l4 = new Label();
			mv.visitJumpInsn(GOTO, l4);
			Label l5 = new Label();
			mv.visitLabel(l5);
			mv.visitLineNumber(26, l5);
			mv.visitFrame(Opcodes.F_APPEND, 3, new Object[] { "java/sql/PreparedStatement", "java/sql/ResultSet", "java/util/List" }, 0, null);
			mv.visitTypeInsn(NEW, "nebula/data/Order");
			mv.visitInsn(DUP);
			mv.visitMethodInsn(INVOKESPECIAL, "nebula/data/Order", "<init>", "()V");
			mv.visitVarInsn(ASTORE, 4);
			Label l6 = new Label();
			mv.visitLabel(l6);
			mv.visitLineNumber(27, l6);
			mv.visitVarInsn(ALOAD, 4);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/Order", "setId", "(I)V");
			Label l7 = new Label();
			mv.visitLabel(l7);
			mv.visitLineNumber(28, l7);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitVarInsn(ALOAD, 4);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
			mv.visitInsn(POP);
			mv.visitLabel(l4);
			mv.visitLineNumber(25, l4);
			mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			mv.visitJumpInsn(IFNE, l5);
			Label l8 = new Label();
			mv.visitLabel(l8);
			mv.visitLineNumber(31, l8);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitFieldInsn(GETFIELD, "nebula/data/db/dao/OrderDAO", "conn", "Ljava/sql/Connection;");
			mv.visitLdcInsn("select * from NOrder_Detail order by order_id,seq");
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;");
			mv.visitVarInsn(ASTORE, 1);
			Label l9 = new Label();
			mv.visitLabel(l9);
			mv.visitLineNumber(32, l9);
			mv.visitVarInsn(ALOAD, 1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "executeQuery", "()Ljava/sql/ResultSet;");
			mv.visitVarInsn(ASTORE, 2);
			Label l10 = new Label();
			mv.visitLabel(l10);
			mv.visitLineNumber(34, l10);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			Label l11 = new Label();
			mv.visitJumpInsn(IFEQ, l11);
			Label l12 = new Label();
			mv.visitLabel(l12);
			mv.visitLineNumber(35, l12);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitVarInsn(ISTORE, 4);
			Label l13 = new Label();
			mv.visitLabel(l13);
			mv.visitLineNumber(37, l13);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;");
			mv.visitVarInsn(ASTORE, 6);
			Label l14 = new Label();
			mv.visitJumpInsn(GOTO, l14);
			Label l15 = new Label();
			mv.visitLabel(l15);
			mv.visitFrame(Opcodes.F_FULL, 7, new Object[] { "nebula/data/db/dao/OrderDAO", "java/sql/PreparedStatement", "java/sql/ResultSet",
					"java/util/List", Opcodes.INTEGER, Opcodes.TOP, "java/util/Iterator" }, 0, new Object[] {});
			mv.visitVarInsn(ALOAD, 6);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;");
			mv.visitTypeInsn(CHECKCAST, "nebula/data/Order");
			mv.visitVarInsn(ASTORE, 5);
			Label l16 = new Label();
			mv.visitLabel(l16);
			mv.visitLineNumber(39, l16);
			Label l17 = new Label();
			mv.visitJumpInsn(GOTO, l17);
			Label l18 = new Label();
			mv.visitLabel(l18);
			mv.visitLineNumber(40, l18);
			mv.visitFrame(Opcodes.F_FULL, 7, new Object[] { "nebula/data/db/dao/OrderDAO", "java/sql/PreparedStatement", "java/sql/ResultSet",
					"java/util/List", Opcodes.INTEGER, "nebula/data/Order", "java/util/Iterator" }, 0, new Object[] {});
			mv.visitTypeInsn(NEW, "nebula/data/OrderDetail");
			mv.visitInsn(DUP);
			mv.visitMethodInsn(INVOKESPECIAL, "nebula/data/OrderDetail", "<init>", "()V");
			mv.visitVarInsn(ASTORE, 7);
			Label l19 = new Label();
			mv.visitLabel(l19);
			mv.visitLineNumber(41, l19);
			mv.visitVarInsn(ALOAD, 7);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setSeq", "(I)V");
			Label l20 = new Label();
			mv.visitLabel(l20);
			mv.visitLineNumber(42, l20);
			mv.visitVarInsn(ALOAD, 7);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setPrice", "(I)V");
			Label l21 = new Label();
			mv.visitLabel(l21);
			mv.visitLineNumber(43, l21);
			mv.visitVarInsn(ALOAD, 7);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_4);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setCount", "(I)V");
			Label l22 = new Label();
			mv.visitLabel(l22);
			mv.visitLineNumber(44, l22);
			mv.visitVarInsn(ALOAD, 7);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_5);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setAmount", "(I)V");
			Label l23 = new Label();
			mv.visitLabel(l23);
			mv.visitLineNumber(45, l23);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/Order", "getDetails", "()Ljava/util/List;");
			mv.visitVarInsn(ALOAD, 7);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
			mv.visitInsn(POP);
			Label l24 = new Label();
			mv.visitLabel(l24);
			mv.visitLineNumber(47, l24);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			Label l25 = new Label();
			mv.visitJumpInsn(IFNE, l25);
			mv.visitJumpInsn(GOTO, l11);
			mv.visitLabel(l25);
			mv.visitLineNumber(48, l25);
			mv.visitFrame(Opcodes.F_APPEND, 1, new Object[] { "nebula/data/OrderDetail" }, 0, null);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitVarInsn(ISTORE, 4);
			mv.visitLabel(l17);
			mv.visitLineNumber(39, l17);
			mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
			mv.visitVarInsn(ILOAD, 4);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/Order", "getId", "()I");
			mv.visitJumpInsn(IF_ICMPEQ, l18);
			mv.visitLabel(l14);
			mv.visitLineNumber(37, l14);
			mv.visitFrame(Opcodes.F_FULL, 7, new Object[] { "nebula/data/db/dao/OrderDAO", "java/sql/PreparedStatement", "java/sql/ResultSet",
					"java/util/List", Opcodes.INTEGER, Opcodes.TOP, "java/util/Iterator" }, 0, new Object[] {});
			mv.visitVarInsn(ALOAD, 6);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z");
			mv.visitJumpInsn(IFNE, l15);
			mv.visitLabel(l11);
			mv.visitLineNumber(53, l11);
			mv.visitFrame(Opcodes.F_FULL, 4,
					new Object[] { "nebula/data/db/dao/OrderDAO", "java/sql/PreparedStatement", "java/sql/ResultSet", "java/util/List" }, 0, new Object[] {});
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ARETURN);
			Label l26 = new Label();
			mv.visitLabel(l26);
			mv.visitLocalVariable("this", "Lnebula/data/db/dao/OrderDAO;", null, l0, l26, 0);
			mv.visitLocalVariable("psmt", "Ljava/sql/PreparedStatement;", null, l2, l26, 1);
			mv.visitLocalVariable("res", "Ljava/sql/ResultSet;", null, l3, l26, 2);
			mv.visitLocalVariable("os", "Ljava/util/List;", "Ljava/util/List<Lnebula/data/Order;>;", l1, l26, 3);
			mv.visitLocalVariable("order", "Lnebula/data/Order;", null, l6, l4, 4);
			mv.visitLocalVariable("id", "I", null, l13, l11, 4);
			mv.visitLocalVariable("o", "Lnebula/data/Order;", null, l16, l14, 5);
			mv.visitLocalVariable("od", "Lnebula/data/OrderDetail;", null, l19, l17, 7);
			mv.visitMaxs(3, 8);
			mv.visitEnd();
		}
		{
			mv = cw.visitMethod(ACC_PUBLIC, "get", "(I)Lnebula/data/Order;", null, new String[] { "java/sql/SQLException" });
			mv.visitCode();
			Label l0 = new Label();
			mv.visitLabel(l0);
			mv.visitLineNumber(61, l0);
			mv.visitTypeInsn(NEW, "nebula/data/Order");
			mv.visitInsn(DUP);
			mv.visitMethodInsn(INVOKESPECIAL, "nebula/data/Order", "<init>", "()V");
			mv.visitVarInsn(ASTORE, 4);
			Label l1 = new Label();
			mv.visitLabel(l1);
			mv.visitLineNumber(63, l1);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitFieldInsn(GETFIELD, "nebula/data/db/dao/OrderDAO", "conn", "Ljava/sql/Connection;");
			mv.visitLdcInsn("select * from NOrder  where id=? order by id");
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;");
			mv.visitVarInsn(ASTORE, 2);
			Label l2 = new Label();
			mv.visitLabel(l2);
			mv.visitLineNumber(64, l2);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_1);
			mv.visitVarInsn(ILOAD, 1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "setInt", "(II)V");
			Label l3 = new Label();
			mv.visitLabel(l3);
			mv.visitLineNumber(65, l3);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "executeQuery", "()Ljava/sql/ResultSet;");
			mv.visitVarInsn(ASTORE, 3);
			Label l4 = new Label();
			mv.visitLabel(l4);
			mv.visitLineNumber(67, l4);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			Label l5 = new Label();
			mv.visitJumpInsn(IFEQ, l5);
			Label l6 = new Label();
			mv.visitLabel(l6);
			mv.visitLineNumber(68, l6);
			mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
			mv.visitLdcInsn("header start");
			mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
			Label l7 = new Label();
			mv.visitLabel(l7);
			mv.visitLineNumber(69, l7);
			mv.visitVarInsn(ALOAD, 4);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ICONST_1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/Order", "setId", "(I)V");
			Label l8 = new Label();
			mv.visitLabel(l8);
			mv.visitLineNumber(70, l8);
			mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
			mv.visitLdcInsn("header end");
			mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
			mv.visitLabel(l5);
			mv.visitLineNumber(73, l5);
			mv.visitFrame(Opcodes.F_APPEND, 3, new Object[] { "java/sql/PreparedStatement", "java/sql/ResultSet", "nebula/data/Order" }, 0, null);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitFieldInsn(GETFIELD, "nebula/data/db/dao/OrderDAO", "conn", "Ljava/sql/Connection;");
			mv.visitLdcInsn("select * from NOrder_Detail  where order_id=? order by order_id,seq");
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/Connection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;");
			mv.visitVarInsn(ASTORE, 2);
			Label l9 = new Label();
			mv.visitLabel(l9);
			mv.visitLineNumber(74, l9);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitInsn(ICONST_1);
			mv.visitVarInsn(ILOAD, 1);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "setInt", "(II)V");
			Label l10 = new Label();
			mv.visitLabel(l10);
			mv.visitLineNumber(75, l10);
			mv.visitVarInsn(ALOAD, 2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "executeQuery", "()Ljava/sql/ResultSet;");
			mv.visitVarInsn(ASTORE, 3);
			Label l11 = new Label();
			mv.visitLabel(l11);
			mv.visitLineNumber(77, l11);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			Label l12 = new Label();
			mv.visitJumpInsn(IFEQ, l12);
			Label l13 = new Label();
			mv.visitLabel(l13);
			mv.visitLineNumber(78, l13);
			Label l14 = new Label();
			mv.visitJumpInsn(GOTO, l14);
			Label l15 = new Label();
			mv.visitLabel(l15);
			mv.visitLineNumber(79, l15);
			mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
			mv.visitTypeInsn(NEW, "nebula/data/OrderDetail");
			mv.visitInsn(DUP);
			mv.visitMethodInsn(INVOKESPECIAL, "nebula/data/OrderDetail", "<init>", "()V");
			mv.visitVarInsn(ASTORE, 5);
			Label l16 = new Label();
			mv.visitLabel(l16);
			mv.visitLineNumber(80, l16);
			mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
			mv.visitLdcInsn("detail start");
			mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
			Label l17 = new Label();
			mv.visitLabel(l17);
			mv.visitLineNumber(81, l17);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ICONST_2);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setSeq", "(I)V");
			Label l18 = new Label();
			mv.visitLabel(l18);
			mv.visitLineNumber(82, l18);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ICONST_3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setPrice", "(I)V");
			Label l19 = new Label();
			mv.visitLabel(l19);
			mv.visitLineNumber(83, l19);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ICONST_4);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setCount", "(I)V");
			Label l20 = new Label();
			mv.visitLabel(l20);
			mv.visitLineNumber(84, l20);
			mv.visitVarInsn(ALOAD, 5);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitInsn(ICONST_5);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getInt", "(I)I");
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/OrderDetail", "setAmount", "(I)V");
			Label l21 = new Label();
			mv.visitLabel(l21);
			mv.visitLineNumber(85, l21);
			mv.visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
			mv.visitLdcInsn("detail end");
			mv.visitMethodInsn(INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V");
			Label l22 = new Label();
			mv.visitLabel(l22);
			mv.visitLineNumber(86, l22);
			mv.visitVarInsn(ALOAD, 4);
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/Order", "getDetails", "()Ljava/util/List;");
			mv.visitVarInsn(ALOAD, 5);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z");
			mv.visitInsn(POP);
			mv.visitLabel(l14);
			mv.visitLineNumber(78, l14);
			mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
			mv.visitVarInsn(ALOAD, 3);
			mv.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "next", "()Z");
			mv.visitJumpInsn(IFNE, l15);
			mv.visitLabel(l12);
			mv.visitLineNumber(90, l12);
			mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
			mv.visitVarInsn(ALOAD, 4);
			mv.visitInsn(ARETURN);
			Label l23 = new Label();
			mv.visitLabel(l23);
			mv.visitLocalVariable("this", "Lnebula/data/db/dao/OrderDAO;", null, l0, l23, 0);
			mv.visitLocalVariable("id", "I", null, l0, l23, 1);
			mv.visitLocalVariable("psmt", "Ljava/sql/PreparedStatement;", null, l2, l23, 2);
			mv.visitLocalVariable("res", "Ljava/sql/ResultSet;", null, l4, l23, 3);
			mv.visitLocalVariable("o", "Lnebula/data/Order;", null, l1, l23, 4);
			mv.visitLocalVariable("od", "Lnebula/data/OrderDetail;", null, l16, l14, 5);
			mv.visitMaxs(3, 6);
			mv.visitEnd();
		}
		{
			mv = cw.visitMethod(ACC_PUBLIC, "setConn", "(Ljava/sql/Connection;)V", null, null);
			mv.visitCode();
			Label l0 = new Label();
			mv.visitLabel(l0);
			mv.visitLineNumber(95, l0);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitVarInsn(ALOAD, 1);
			mv.visitFieldInsn(PUTFIELD, "nebula/data/db/dao/OrderDAO", "conn", "Ljava/sql/Connection;");
			Label l1 = new Label();
			mv.visitLabel(l1);
			mv.visitLineNumber(96, l1);
			mv.visitInsn(RETURN);
			Label l2 = new Label();
			mv.visitLabel(l2);
			mv.visitLocalVariable("this", "Lnebula/data/db/dao/OrderDAO;", null, l0, l2, 0);
			mv.visitLocalVariable("conn", "Ljava/sql/Connection;", null, l0, l2, 1);
			mv.visitMaxs(2, 2);
			mv.visitEnd();
		}
		{
			mv = cw.visitMethod(ACC_PUBLIC + ACC_BRIDGE + ACC_SYNTHETIC, "get", "(I)Ljava/lang/Object;", null, new String[] { "java/sql/SQLException" });
			mv.visitCode();
			Label l0 = new Label();
			mv.visitLabel(l0);
			mv.visitLineNumber(1, l0);
			mv.visitVarInsn(ALOAD, 0);
			mv.visitVarInsn(ILOAD, 1);
			mv.visitMethodInsn(INVOKEVIRTUAL, "nebula/data/db/dao/OrderDAO", "get", "(I)Lnebula/data/Order;");
			mv.visitInsn(ARETURN);
			mv.visitMaxs(2, 2);
			mv.visitEnd();
		}
		cw.visitEnd();

		return cw.toByteArray();
	}
}
